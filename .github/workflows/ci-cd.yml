name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Verify imports (smoke test)
      run: |
        python -c "import app; print('App imports successful')"
        python -c "from src.document_processor import DocumentProcessor; print('DocumentProcessor imports successful')"
        python -c "from src.embeddings import EmbeddingModel; print('EmbeddingModel imports successful')"
        python -c "from src.vector_store import VectorStore; print('VectorStore imports successful')"

    - name: Run tests (if available)
      run: |
        if [ -f "tests/test_basic.py" ]; then
          pytest tests/ -v
        else
          echo "No tests found, skipping..."
        fi
      continue-on-error: true

    - name: Check code formatting
      run: |
        pip install black
        black --check src/ app.py || echo "Code formatting check completed"
      continue-on-error: true

  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Deploy to Render
      if: ${{ secrets.RENDER_DEPLOY_HOOK_URL != '' }}
      run: |
        curl -X POST "${{ secrets.RENDER_DEPLOY_HOOK_URL }}"

    # Alternative: Deploy to Railway
    # - name: Deploy to Railway
    #   if: ${{ secrets.RAILWAY_TOKEN != '' }}
    #   uses: bervProject/railway-deploy@main
    #   with:
    #     railway_token: ${{ secrets.RAILWAY_TOKEN }}
    #     service: ${{ secrets.RAILWAY_SERVICE_NAME }}
